services:
    redis:
        image: redis:alpine
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            retries: 10
            timeout: 10s

    db:
        image: postgres:15
        container_name: job_board_postgres_db
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            retries: 5
            timeout: 5s
        volumes:
            - postgres_data:/var/lib/postgresql/data

    web:
        build: .
        depends_on:
            redis:
                condition: service_healthy
            db:
                condition: service_healthy
        volumes:
            - .:/app
        ports:
            - "8000:8000"
        environment:
            - DJANGO_SETTINGS_MODULE=job_board_platform.settings
            - DATABASE_URL=postgres://developer:password@db:5432/job_board
        command: >
            sh -c "python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000
            "

    worker:
        build: .
        depends_on:
            redis:
                condition: service_healthy
            web:
                condition: service_started
        volumes:
            - .:/app
        environment:
            - DJANGO_SETTINGS_MODULE=job_board_platform.settings
        command: celery -A job_board_platform worker --loglevel=info

volumes:
    redis_data:
    postgres_data:
