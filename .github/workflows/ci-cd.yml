name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "POSTGRES_DB=job_board" >> $GITHUB_ENV
          echo "POSTGRES_USER=Temz" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=Temitope_12" >> $GITHUB_ENV
          echo "POSTGRES_HOST=job_board_postgres_db" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
          echo "DEFAULT_FROM_EMAIL=admin@gmail.com" >> $GITHUB_ENV
          echo "EMAIL_HOST_PASSWORD=password" >> $GITHUB_ENV
          echo "EMAIL_HOST_USER=admin@gmail.com" >> $GITHUB_ENV
          echo "SUPPORT_EMAIL=admisupportn@gmail.com" >> $GITHUB_ENV

      - name: Build and start services using docker-compose
        run: |
            docker compose up -d --build

      - name: Wait for PostgreSQL to be Ready
        run: |
          echo "Waiting for PostgreSQL to start..."
          while ! docker exec job_board_postgres_db pg_isready -U Temz; do
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: display web logs
        run: docker logs job_board_platform-web-1

      - name: Run Migrations
        run: docker compose exec -T job_board_platform-web-1 python manage.py migrate

      - name: Collect Static Files
        run: docker compose exec -T job_board_platform-web-1 python manage.py collectstatic --noinput

      - name: Check Docker container status
        run: docker ps -a

      - name: Show logs for debugging
        run: docker compose logs job_board_platform-web-1

      - name: Run Tests inside the container
        run: docker compose exec -T job_board_platform-web-1 pytest --disable-warnings

      - name: Stop and clean up Docker containers
        run: docker compose down

      - name: Checkout main branch
        run: |
          git fetch origin main
          git checkout main

      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Merge develop into main and push
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git checkout main
          git merge --no-ff develop -m "Auto-merged develop into main after successful tests"
          git push https://x-access-token:${GH_TOKEN}@github.com/Topsurpass/job_board_platform.git main
